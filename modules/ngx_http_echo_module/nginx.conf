


# https://docs.nginx.com/nginx/admin-guide/load-balancer/using-proxy-protocol/
#./bin/sbin/nginx -c ./modules/ngx_http_echo_module/nginx.conf -p .
# ./bin/sbin/nginx -V

# user  nginx;
worker_processes  1;
daemon off;
# error_log  logs/error.log notice;
# pid        /var/run/nginx.pid;

error_log logs/error.log debug;

events {
    worker_connections  1024;
}


http {
    # include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$proxy_protocol_addr" "$proxy_protocol_port"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;


    server {
        listen 8090;

        root html;

        add_header Cache-Control no-cache;
        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name _;

        location / {
            echo "hello world";
            location /hello {
                echo " for me";
            }
        }
    }


    #gzip  on;

    #include /etc/nginx/conf.d/*.conf;
    # include /etc/nginx/sites-enabled/default;
    server {
        # proxy protocol的接收端必须在接收到完整有效的 proxy protocol 头部后才能开始处理连接数据。
        # 因此对于服务器的同一个监听端口，不存在兼容带proxy protocol包的连接和不带proxy protocol包的连接。
        # 如果服务器接收到的第一个数据包不符合proxy protocol的格式，那么服务器会直接终止连接。
        # listen 80;
        listen 8088 proxy_protocol;
        # listen 80 default_server reuseport;
        #listen 127.0.0.1:80 default_server;
        #listen [::]:80 default_server;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root html;

        add_header Cache-Control no-cache;
        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name _;

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ =404;
            #expires 10s;
            # add_header    Cache-Control  max-age=3s;
            proxy_set_header X-Forwarded-For $proxy_protocol_addr;
            
        }

        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #	include snippets/fastcgi-php.conf;
        #
        #	# With php-fpm (or other unix sockets):
        #	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
        #	# With php-cgi (or other tcp sockets):
        #	fastcgi_pass 127.0.0.1:9000;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #	deny all;
        #}
    }
}


# TCP/UDP proxy and load balancing block
#
#stream {
    # Example configuration for TCP load balancing

    #upstream stream_backend {
    #    zone tcp_servers 64k;
    #    server backend1.example.com:12345;
    #    server backend2.example.com:12345;
    #}

    #server {
    #    listen 12345;
    #    status_zone tcp_server;
    #    proxy_pass stream_backend;
    #}
#}


# https://docs.nginx.com/nginx/admin-guide/load-balancer/using-proxy-protocol/#proxy-protocol-for-a-tcp-connection-to-an-upstream
# nginx 针对 TCP/UDP 的 proxy-protocol
stream {
    server {
        listen 12345;
        # listen 12345 proxy_protocol;

        
        # proxy_pass 127.0.0.1:80;
        proxy_pass stream_backend;
        proxy_protocol      on;
    }

    #这里配置不对，proxy 到 http 去了，应该是 proxy 到 udp server。不删除。
    server {
        listen 12346 udp;
        # listen 12345 proxy_protocol;

        
        # proxy_pass 127.0.0.1:80;
        proxy_pass stream_backend;
        proxy_protocol      on;
    }

    upstream stream_backend {
    #    zone tcp_servers 64k;
       server 127.0.0.1:8088;
    #    server backend2.example.com:12345;
    }    
}