
# ./bin/sbin/nginx -c conf/nginx-lua.conf  -p .
# curl localhost:6080/lua
# hello world

worker_processes  1;
daemon off;
# master_process off;
# error_log  logs/error.log notice;
# pid        /var/run/nginx.pid;

# error_log logs/error.log debug;
error_log stderr notice;

events {
    worker_connections  255;
    # worker_connections  1024;
}



http {
    # include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$proxy_protocol_addr" "$proxy_protocol_port"'
                      '$proxy_host $proxy_port $proxy_add_x_forwarded_for $proxy_internal_body_length $proxy_internal_chunked';

    # access_log  logs/access.log  main;
    access_log /dev/stderr main; 

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    # 这里需要加上 openresty 路径，否则报错 "module 'resty.core' not found"
    lua_package_path "/usr/local/Cellar/openresty/1.21.4.2_1/lualib/?.lua;;";
    lua_package_cpath "/usr/local/Cellar/openresty/1.21.4.2_1/lualib/?.so;;";


    # 测试 proxy-pass module
    server {
        listen 6080;
        root html;
        index index.html;
        # server_name server_names;
        # access_log  ${logs/server.access.log} main;
        # location / {
        # # location /proxy-pass {
        #     proxy_pass http://localhost:9091;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-RealIP $remote_addr;
        # }


        location /lua {
            # set_by_lua_block $a {
            #     ngx.log(ngx.ERR, "set_by_lua*")
            # }
            rewrite_by_lua_block {
                ngx.log(ngx.INFO, "rewrite_by_lua*")
            }
            access_by_lua_block {
                ngx.log(ngx.INFO, "access_by_lua*")
            }
            content_by_lua_block {
                ngx.say("hello world")
            }
            header_filter_by_lua_block {
                ngx.log(ngx.INFO, "header_filter_by_lua*")
            }
            body_filter_by_lua_block {
                ngx.log(ngx.INFO, "body_filter_by_lua*")
            }
            log_by_lua_block {
                ngx.log(ngx.INFO, "log_by_lua*")
            }
        }
    }

}