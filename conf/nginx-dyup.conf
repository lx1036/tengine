


# ./objs/nginx -c ./conf/nginx-dyup.conf -p .

# 本地运行 ./objs/nginx -c ./conf/nginx.conf -p .
# ./objs/nginx -c ./conf/nginx.conf -p . -s quit

#user  nobody;
worker_processes  1;

daemon off;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    # worker_connections  1024;
    worker_connections  255;
}


error_log logs/error.log debug;


http {

    # 这里需要加上 openresty 路径，否则报错 "module 'resty.core' not found"
    lua_package_path "/usr/local/Cellar/openresty/1.21.4.2_1/lualib/?.lua;;";
    lua_package_cpath "/usr/local/Cellar/openresty/1.21.4.2_1/lualib/?.so;;";

    # dyups_upstream_conf  upstream.conf;
    # include upstream.conf;
    upstream host1 {
        server 127.0.0.1:8088;
    }

    upstream host2 {
        server 127.0.0.1:8089;
    }

    server {
        listen 9090;

        location / {
            proxy_pass http://$host;
        }
    }

    server {
        listen 8088;
        location / {
            # echo 8088;
            root   html;
            index  index.html;
        }
    }

    server {
        listen 8089;
        location / {
            # echo 8089;
            root   html;
            index  index2.html;
        }
    }

    server {
        listen 9091;
        location / {
            dyups_interface;
        }
    }

    server {
        # listen *:6066 | *:6067;
        listen 6066;
        location / {
            proxy_pass http://backend;
        }
    }

    # http://nginx.org/en/docs/http/ngx_http_upstream_module.html
    upstream backend {
        server 127.0.0.1:6010 weight=5;
        # server backend1.example.com       weight=5;
        # server backend2.example.com:8080;
        # server unix:/tmp/backend3;

        # server backup1.example.com:8080   backup;
        # server backup2.example.com:8080   backup;
    }
}

